<?xml version="1.0"?>

<robot name="agv" xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:include filename="$(find agv_description)/urdf/wheel.urdf.xacro" /> 

<!-- Definition des couleurs de l'AGV -->
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>


  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>


   <!-- liste des propriétés -->
  <!--All units in m-kg-s-radians unit system -->
  <property name="M_PI" value="3.1415926535897931" />
  <property name="M_PI_2" value="1.570796327" />
  <property name="DEG_TO_RAD" value="0.017453293" />

    <!-- Main body radius and height -->
  <!-- Main Body Cylinder base   -->
  <property name="base_width" value="0.54" /> 
  <property name="base_depth" value="0.54" /> 
  <property name="base_heigth" value="0.1" /> 
  <property name="base_mass" value="28" /> <!-- in kg-->

 <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <property name="caster_f_height" value="0.04" /> 
  <property name="caster_f_radius" value="0.018" /> 
  <property name="caster_f_mass" value="0.4" /> <!-- in kg-->



  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <property name="caster_b_height" value="0.04" /> 
  <property name="caster_b_radius" value="0.018" /> 
  <property name="caster_b_mass" value="0.5" /> <!-- in kg-->

  <!-- Wheels -->

  
  <property name="base_x_origin_to_wheel_origin" value="(0.31)" />
  <property name="base_y_origin_to_wheel_origin" value="(0.31)" />
  <property name="base_z_origin_to_wheel_origin" value="0.06" />



 <!-- Macro for calculating inertia of cylinder -->
  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </macro>

 <!-- Macro for calculating inertia of box -->
  <macro name="box_inertia" params="m w d h">
    <inertia  ixx="${m*(h*h+d*d)/12}" ixy = "0" ixz = "0"
              iyy="${m*(w*w+d*d)/12}" iyz = "0"
              izz="${m*(w*w+h*h)/12}" /> 
  </macro>


  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin 
  <link name="base_footprint">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0" 
          izz="0.0001" />
    </inertial>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>

  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>
-->
  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1.07" ixy="0.000193" ixz="0"
         iyx="0.000193" iyy="1" iyz="0.0" 
         izx="0.0" izy="0.00031" izz="0.64" />
        <!--<box_inertia  m="${base_mass}" w="1" h="1" d="1"/>-->
    </inertial>    
    <visual>
      <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
      <geometry>
          <mesh filename="package://agv_description/meshes/chassis.stl"/>
      </geometry>
      <material name="White" />
    </visual>  
    <collision>
      <origin xyz="0 0 0" rpy="${M_PI/2} 0 0 " />
      <geometry>
          <mesh filename="package://agv_description/meshes/chassis.stl"/>
      </geometry>
    </collision>     
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <!-- Wheel Definitions -->

  <wheel fb="front" lr="right" parent="base_link" translateX="0" translateY="1" flipY="-1"/>
  <wheel fb="front" lr="left" parent="base_link" translateX="0" translateY="-1" flipY="1"/>

  <!--Caster front  -->

    <link name="caster_front_link">

    <visual>
      <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
      <geometry>
	<sphere radius="${caster_f_radius}" />
      </geometry>
      <material name="Black" />
    </visual>  



      <collision>
        <geometry>

	<sphere radius="${caster_f_radius}" />

        </geometry>
      <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
      </collision>      
      <inertial>
        <mass value="${caster_f_mass}" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0" 
                 izz="0.001" />
      </inertial>
    </link>



 <joint name="caster_front_joint" type="fixed">
      <parent link="base_link"/>
      <child link="caster_front_link"/>
      <origin xyz="${0.27-0.02} 0 -0" rpy="0 0 0"/>
    </joint>


  <gazebo reference="caster_front_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/Grey</material>
  </gazebo>
    


<!--Caster back  -->

    <link name="caster_back_link">

    <visual>
      <origin xyz="0 0 0 " rpy="${M_PI/2} 0 0" /> 

      <geometry>


	<sphere radius="${caster_b_radius}" />


      </geometry>
      <material name="Black" />
    </visual>  



      <collision>
        <geometry>
		<sphere radius="${caster_b_radius}" />
        </geometry>
      <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" /> 
      </collision>      
      <inertial>
        <mass value="${caster_b_mass}" />
        <origin xyz="0 0 0" />        
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0" 
                 izz="0.001" />
      </inertial>
    </link>

    <joint name="caster_back_joint" type="fixed">
      <parent link="base_link"/>
      <child link="caster_back_link"/>
      <origin xyz="-${0.27-0.02} 0 -0" rpy="0 0 0"/>
    </joint>


  <gazebo reference="caster_back_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/Grey</material>
  </gazebo>


 <!-- <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>true</publishWheelTF>
      <robotNamespace>/</robotNamespace>
      <publishTf>true</publishTf>
      <publishWheelJointState>false</publishWheelJointState>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>front_left_wheel_joint</leftJoint>
      <rightJoint>front_right_wheel_joint</rightJoint>
      <wheelSeparation>${base_width}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <broadcastTF>1</broadcastTF>
      <wheelTorque>2</wheelTorque>
      <wheelAcceleration>0.5</wheelAcceleration>
      <commandTopic>cmd_vel</commandTopic>
      <odometryFrame>odom</odometryFrame> 
      <odometryTopic>odom</odometryTopic> 
      <robotBaseFrame>base_footprint</robotBaseFrame>


    </plugin>
  </gazebo> 
-->



 <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/agv</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

<gazebo>
    <plugin name="encoders_ticks" filename="libencodersTicks_plugin.so">
    </plugin>
  </gazebo>

<joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 0.15" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="hokuyo_link"/>
  </joint>

  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="${M_PI/2} 0 0"/>
      <geometry>
    <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="-0.03 0.03 0" rpy="${M_PI/2} 0 0"/>
      <geometry>
        <mesh filename="package://agv_description/meshes/rplidar_main.STL" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
    <gazebo reference="hokuyo_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>20</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

 <link name="imu_link"/>


<joint name="imu_joint" type="fixed">
<parent link="base_link"/>
<child link="imu_link"/>
<origin xyz="0 0 0.1" rpy="0 0 0"/>
</joint>



<gazebo>
<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
<alwaysOn>true</alwaysOn>
<bodyName>imu_link</bodyName>
<frameName>imu_link</frameName>
<topicName>imu</topicName>
<serviceName>imu_service</serviceName>
<gaussianNoise>0.0</gaussianNoise>
<updateRate>200</updateRate>
<imu>
<noise>
<type>gaussian</type>
<rate>
<mean>0.0</mean>
<stddev>2e-4</stddev>
<bias_mean>0.0000075</bias_mean>
<bias_stddev>0.0000008</bias_stddev>
</rate>
<accel>
<mean>0.0</mean>
<stddev>1.7e-2</stddev>
<bias_mean>0.1</bias_mean>
<bias_stddev>0.001</bias_stddev>
</accel>
</noise>
</imu>
</plugin>
</gazebo>

</robot>