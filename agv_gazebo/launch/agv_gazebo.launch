<launch>

<rosparam command="load" file="$(find agv_gazebo)/config/motors_parameters.yaml" />
  <rosparam command="load" file="$(find agv_gazebo)/config/general_parameters.yaml" /> 
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>



  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
  <arg name="world_name" value="$(find agv_gazebo)/worlds/test.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find agv_description)/urdf/agv.xacro'" /> 


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model agv -param robot_description"/> 

  <include file="$(find agv_control)/launch/agv_control.launch"/>
  <include file="$(find agv_convert_velocities)/launch/move_agv.launch"/>
  <include file="$(find agv_lidar_filter)/launch/filter.launch"/>
  <include file="$(find agv_compute_odometry)/launch/odom_compute.launch"/>

</launch>